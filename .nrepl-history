                  (doseq [s (http/string resp)]
                         (println s))))
(do
    (load-file "src/core/types.clj")
    (load-file "src/core/utils.clj")
    (load-file "src/core/datasources.clj")
    (load-file "src/core/oanda.clj")
    (load-file "src/core/simple.clj")
    (load-file "src/core/spike.clj")
    (load-file "src/core/marketcap.clj")
    (load-file "build.boot")
    (ts/unstrument)
    (ts/instrument))
(do
    (load-file "src/core/types.clj")
    (load-file "src/core/utils.clj")
    (load-file "src/core/datasources.clj")
    (load-file "src/core/oanda.clj")
    (load-file "src/core/simple.clj")
    (load-file "src/core/spike.clj")
    (load-file "src/core/marketcap.clj")
    (load-file "build.boot")
    (ts/unstrument)
    (ts/instrument))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str oa/streaming-api-base "prices")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"
                                                 :accountId oa/account-no})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str "https://stream-fxpractice.oanda.com/" "prices")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"
                                                 :accountId oa/account-no})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str "https://stream-fxpractice.oanda.com/v1/" "prices")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"
                                                 :accountId "LeemanRolls"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str "https://stream-fxpractice.oanda.com/v1/" "prices")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"
                                                 :accountId oa/account-no})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                oa/account-no
                                                "pricing"
                                                "stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                oa/account-no
                                                "pricing"
                                                "stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [parts (ref #{})
                   resp (http/request-stream client
                                             :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                oa/account-no
                                                "pricing"
                                                "stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"}
                                             (fn [state body]
                                                 (dosync (alter parts conj (string body)))
                                                 [body :continue]))]
                  (println @parts)
                  ))
(with-open [client (http/create-client)]
             (let [parts (ref #{})
                   resp (http/request-stream client
                                             :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                oa/account-no
                                                "pricing"
                                                "stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"}
                                             (fn [state body]
                                                 (dosync (alter parts conj (str body)))
                                                 [body :continue]))]
                  (println @parts)
                  ))
(with-open [client (http/create-client)]
             (let [parts (ref #{})
                   resp (http/request-stream client
                                             :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                oa/account-no
                                                "pricing"
                                                "stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"}
                                             (fn [state body]
                                                 (dosync (alter parts conj (http/string body)))
                                                 [body :continue]))]
                  (println @parts)
                  ))
(let [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                oa/account-no
                                                "pricing"
                                                "stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(u/json-get
    (str
      "https://stream-fxpractice.oanda.com/v3/"
      oa/account-no
      "/pricing"
      "/stream")
    {:headers {:Authorization (str "Bearer " oa/oanda-api-key)}})
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :timeout -1
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client :connection-timeout -1 :request-timeout -1 :idle-in-pool-timeout -1)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
  (with-open [client (http/create-client :connection-timeout -1 :request-timeout -1)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client :connection-timeout -1)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
  (with-open [client (http/create-client :connection-timeout 1000000000000000)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
  (with-open [client (http/create-client :connection-timeout -1)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client :idle-in-pool-timeout -1)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client :keep-alive true)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client :keep-alive true)]
             (let [resp (http/stream-seq client
                                         :get "https://stream.twitter.com/1.1/statuses/sample.json")]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client :keep-alive true)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
  (with-open [client (http/create-client :keep-alive true :request-timeout 1000]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client :keep-alive true :request-timeout 1000)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (doseq [s (http/string resp)]
                         (println s))))
(with-open [client (http/create-client :keep-alive true :request-timeout 1000)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (when-let [err (http/error resp)]
                            (println "failed processing request: " err))
                  (doseq [s (http/string resp)]
                         (println s))
                  ))
  (with-open [client (http/create-client :keep-alive true :request-timeout 10000)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  
                  (when-let [err (http/error resp)]
                            (println "failed processing request: " err))
                  (doseq [s (http/string resp)]
                         (println s))
                  ))
  (with-open [client (http/create-client :keep-alive true :request-timeout 30000)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (when-let [err (http/error resp)]
                            (println "failed processing request: " err))
                  (doseq [s (http/string resp)]
                         (println s))
                  ))
  (with-open [client (http/create-client :keep-alive true :request-timeout -1)]
             (let [resp (http/stream-seq client
                                         :get (str
                                                "https://stream-fxpractice.oanda.com/v3/"
                                                "accounts/"
                                                oa/account-no
                                                "/pricing"
                                                "/stream")
                                         :headers {:Authorization (str "Bearer " oa/oanda-api-key)}
                                         :query {:instruments "EUR_USD"})]
                  (when-let [err (http/error resp)]
                            (println "failed processing request: " err))
                  (doseq [s (http/string resp)]
                         (println s))
                  ))
(do
    (load-file "src/core/types.clj")
    (load-file "src/core/utils.clj")
    (load-file "src/core/datasources.clj")
    (load-file "src/core/oanda.clj")
    (load-file "src/core/simple.clj")
    (load-file "src/core/spike.clj")
    (load-file "src/core/marketcap.clj")
    (load-file "build.boot")
    (ts/unstrument)
    (ts/instrument))
(do
    (load-file "src/core/types.clj")
    (load-file "src/core/utils.clj")
    (load-file "src/core/datasources.clj")
    (load-file "src/core/oanda.clj")
    (load-file "src/core/simple.clj")
    (load-file "src/core/spike.clj")
    (load-file "src/core/marketcap.clj")
    (load-file "build.boot")
    (ts/unstrument)
    (ts/instrument))
(do
    (load-file "src/core/types.clj")
    (load-file "src/core/utils.clj")
    (load-file "src/core/datasources.clj")
    (load-file "src/core/oanda.clj")
    (load-file "src/core/simple.clj")
    (load-file "src/core/spike.clj")
    (load-file "src/core/marketcap.clj")
    (load-file "build.boot")
    (ts/unstrument)
    (ts/instrument))
  (def client (http/create-client :keep-alive true :request-timeout -1))
/home/leeondamiky/Documents/Clojure/trading-tothemoon/build.boot
  (ds/oanda-price-stream-start client identity "EUR_USD")
  (def stream (ds/oanda-price-stream-start client identity "EUR_USD"))
(do
    (load-file "src/core/types.clj")
    (load-file "src/core/utils.clj")
    (load-file "src/core/datasources.clj")
    (load-file "src/core/oanda.clj")
    (load-file "src/core/simple.clj")
    (load-file "src/core/spike.clj")
    (load-file "src/core/marketcap.clj")
    (load-file "build.boot")
    (ts/unstrument)
    (ts/instrument))
  (def stream (ds/oanda-price-stream-start client identity "EUR_USD"))
  (def stream (ds/oanda-price-stream-start client println "EUR_USD"))
(do
    (load-file "src/core/types.clj")
    (load-file "src/core/utils.clj")
    (load-file "src/core/datasources.clj")
    (load-file "src/core/oanda.clj")
    (load-file "src/core/simple.clj")
    (load-file "src/core/spike.clj")
    (load-file "src/core/marketcap.clj")
    (load-file "build.boot")
    (ts/unstrument)
    (ts/instrument))
(do
    (load-file "src/core/types.clj")
    (load-file "src/core/utils.clj")
    (load-file "src/core/datasources.clj")
    (load-file "src/core/oanda.clj")
    (load-file "src/core/simple.clj")
    (load-file "src/core/spike.clj")
    (load-file "src/core/marketcap.clj")
    (load-file "build.boot")
    (ts/unstrument)
    (ts/instrument))
(do
    (load-file "src/core/types.clj")
    (load-file "src/core/utils.clj")
    (load-file "src/core/datasources.clj")
    (load-file "src/core/oanda.clj")
    (load-file "src/core/simple.clj")
    (load-file "src/core/spike.clj")
    (load-file "src/core/marketcap.clj")
    (load-file "build.boot")
    (ts/unstrument)
    (ts/instrument))
   (ds/oanda-historical "EUR_USD" "5000" "M1")
